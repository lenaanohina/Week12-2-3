//–ó–∞–¥–∞–Ω–∏–µ - 2
const text =
  "—É –ª—É–∫–æ–º–æ—Ä—å—è –∫–ª—ë–Ω –∑–µ–ª—ë–Ω—ã–π; –∑–ª–∞—Ç–∞—è —Ü–µ–ø—å –Ω–∞ –∫–ª—ë–Ω —Ç–æ–º; –∏ –¥–Ω—ë–º –∏ –Ω–æ—á—å—é –∫–æ—Ç —É—á—ë–Ω—ã–π; –≤—Å—ë —Ö–æ–¥–∏—Ç –ø–æ —Ü–µ–ø–∏ –∫—Ä—É–≥–æ–º; –∏–¥—ë—Ç –Ω–∞–ø—Ä–∞–≤–æ ‚Äî –ø–µ—Å–Ω—å –∑–∞–≤–æ–¥–∏—Ç; –Ω–∞–ª–µ–≤–æ ‚Äî —Å–∫–∞–∑–∫—É –≥–æ–≤–æ—Ä–∏—Ç; —Ç–∞–º —á—É–¥–µ—Å–∞: —Ç–∞–º –ª–µ—à–∏–π –±—Ä–æ–¥–∏—Ç; —Ä—É—Å–∞–ª–∫–∞ –Ω–∞ –≤–µ—Ç–≤—è—Ö —Å–∏–¥–∏—Ç; —Ç–∞–º –Ω–∞ –Ω–µ–≤–µ–¥–æ–º—ã—Ö –¥–æ—Ä–æ–∂–∫–∞—Ö; —Å–ª–µ–¥—ã –Ω–µ–≤–∏–¥–∞–Ω–Ω—ã—Ö –∑–≤–µ—Ä–µ–π; –∏–∑–±—É—à–∫–∞ —Ç–∞–º –Ω–∞ –∫—É—Ä—å–∏—Ö –Ω–æ–∂–∫–∞—Ö; —Å—Ç–æ–∏—Ç –±–µ–∑ –æ–∫–æ–Ω, –±–µ–∑ –¥–≤–µ—Ä–µ–π; —Ç–∞–º –ª–µ—Å –∏ –¥–æ–ª –≤–∏–¥–µ–Ω–∏–π –ø–æ–ª–Ω—ã; —Ç–∞–º –æ –∑–∞—Ä–µ –ø—Ä–∏—Ö–ª—ã–Ω—É—Ç –≤–æ–ª–Ω—ã; –Ω–∞ –±—Ä–µ–≥ –ø–µ—Å—á–∞–Ω—ã–π –∏ –ø—É—Å—Ç–æ–π; –∏ —Ç—Ä–∏–¥—Ü–∞—Ç—å –≤–∏—Ç—è–∑–µ–π –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã—Ö; —á—Ä–µ–¥–æ–π –∏–∑ –≤–æ–¥ –≤—ã—Ö–æ–¥—è—Ç —è—Å–Ω—ã—Ö; –∏ —Å –Ω–∏–º–∏ –¥—è–¥—å–∫–∞ –∏—Ö –º–æ—Ä—Å–∫–æ–π; —Ç–∞–º –∫–æ—Ä–æ–ª–µ–≤–∏—á –º–∏–º–æ—Ö–æ–¥–æ–º; –ø–ª–µ–Ω—è–µ—Ç –≥—Ä–æ–∑–Ω–æ–≥–æ —Ü–∞—Ä—è; —Ç–∞–º –≤ –æ–±–ª–∞–∫–∞—Ö –ø–µ—Ä–µ–¥ –Ω–∞—Ä–æ–¥–æ–º; —á–µ—Ä–µ–∑ –ª–µ—Å–∞, —á–µ—Ä–µ–∑ –º–æ—Ä—è; –∫–æ–ª–¥—É–Ω –Ω–µ—Å—ë—Ç –±–æ–≥–∞—Ç—ã—Ä—è; –≤ —Ç–µ–º–Ω–∏—Ü–µ —Ç–∞–º —Ü–∞—Ä–µ–≤–Ω–∞ —Ç—É–∂–∏—Ç; –∞ –±—É—Ä—ã–π –≤–æ–ª–∫ –µ–π –≤–µ—Ä–Ω–æ —Å–ª—É–∂–∏—Ç; —Ç–∞–º —Å—Ç—É–ø–∞ —Å –±–∞–±–æ—é —è–≥–æ–π; –∏–¥—ë—Ç, –±—Ä–µ–¥—ë—Ç —Å–∞–º–∞ —Å–æ–±–æ–π; —Ç–∞–º —Ü–∞—Ä—å –∫–∞—â–µ–π –Ω–∞–¥ –∑–ª–∞—Ç–æ–º —á–∞—Ö–Ω–µ—Ç; —Ç–∞–º —Ä—É—Å—Å–∫–∏–π –¥—É—Ö‚Ä¶ —Ç–∞–º —Ä—É—Å—å—é –ø–∞—Ö–Ω–µ—Ç!; –∏ —Ç–∞–º —è –±—ã–ª, –∏ –º—ë–¥ —è –ø–∏–ª; —É –º–æ—Ä—è –≤–∏–¥–µ–ª –∫–ª—ë–Ω –∑–µ–ª—ë–Ω—ã–π; –ø–æ–¥ –Ω–∏–º —Å–∏–¥–µ–ª, –∏ –∫–æ—Ç —É—á—ë–Ω—ã–π; —Å–≤–æ–∏ –º–Ω–µ —Å–∫–∞–∑–∫–∏ –≥–æ–≤–æ—Ä–∏–ª.";

console.log(text.length);

const result = text.replace(/;/g, "\n");

const substring = result.replaceAll(" ", "");

const newText = result.substring(28, 50);

const replacedText = newText.replace("–∫–ª—ë–Ω", "–¥—É–±–µ");

const replacedText2 = result.toUpperCase();

const replacedText3 = result.replace(/–∫–ª—ë–Ω/g, "–¥—É–±");

const index = result.indexOf("–º–æ—Ä—è");

const modifiedText = replacedText[0].toUpperCase() + replacedText.slice(1);

console.log(`1. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ: ${text.length}`);
console.log(`2. –¢–µ–∫—Å—Ç —Å –ø–µ—Ä–µ–Ω–æ—Å–∞–º–∏ —Å—Ç—Ä–æ–∫: \n ${result}`);
console.log(`3. –¢–µ–∫—Å—Ç —Å —É–¥–∞–ª—ë–Ω–Ω—ã–º–∏ –ø—Ä–æ–±–µ–ª–∞–º–∏: ${substring}`);
console.log(`4. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏: ${newText}`);
console.log(`5. –ó–∞–º–µ–Ω–∞ "–∫–ª—ë–Ω" –Ω–∞ "–¥—É–±–µ": ${replacedText}`);
console.log(`6. –°—Ç—Ä–æ–∫–∞ result –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ: ${replacedText2}`);
console.log(
  `7. –ó–∞–º–µ–Ω–∞ "–∫–ª—ë–Ω" –Ω–∞ "–¥—É–±" (–≤—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è) –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π result: ${replacedText3}`
);
console.log(`8. –ò–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è "–º–æ—Ä—è": ${index}`);
console.log(`9. –°—Ç—Ä–æ–∫–∞ —Å –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–π –ø–µ—Ä–≤–æ–π –±—É–∫–≤–æ–π: ${modifiedText}`);

//–ó–∞–¥–∞–Ω–∏–µ - 3

function calculateBMI() {
  const result = document.getElementById("result");
  const weight = document.getElementById("weightInput").value;
  const height = document.getElementById("heightInput").value;

  const bmi = (weight / Math.pow(height / 100, 2)).toFixed(2);
  result.textContent = "–í–∞—à –ò–ú–¢: " + bmi;

  if (bmi < 18.5) {
    category = "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –í–µ—Å üòí";
    result.style.color = "#ffc44d";
  } else if (bmi >= 18.5 && bmi <= 24.9) {
    category = "–ù–æ—Ä–º–∞–ª—å–Ω—ã–π –í–µ—Å üòç";
    result.style.color = "#0be881";
  } else if (bmi >= 25 && bmi <= 29.9) {
    category = "–ò–∑–±—ã—Ç–æ—á–Ω—ã–π –í–µ—Å üòÆ";
    result.style.color = "#ff884d";
  } else if (bmi >= 30 && bmi <= 39.9) {
    category = "–û–∂–∏—Ä–µ–Ω–∏–µ üò±";
    result.style.color = "#ff5e57";
  }
  document.getElementById("category").textContent = category;
}
const button = document.getElementById("btn");
button.addEventListener("click", calculateBMI);
